// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique()
  password      String
  birthday      DateTime  ?                      @db.Timestamptz()
  role          Role          @default(USER)
  active        Boolean       @default(true)
  createdAt     DateTime      @default(now())   @db.Timestamptz()
  updatedAt     DateTime      @updatedAt        @db.Timestamptz()
  Establishment Establishments[]
  Expenses      Expenses[]
  Incomes       Incomes[]
  userVerification User_Verification[]
  User_Settings User_Settings ?
  verified      Boolean         @default(false)
}

model Establishments {
  id        Int        @id @default(autoincrement())
  user      Users       @relation(fields: [userId], references: [id])
  userId    Int
  name      String
  createdAt DateTime    @default(now())     @db.Timestamptz()
  updatedAt DateTime   @updatedAt           @db.Timestamptz()
  Expenses  Expenses[]
  Incomes   Incomes[]
}

model Expenses {
  id              Int           @id @default(autoincrement())
  Establishment   Establishments @relation(fields: [establishmentId], references: [id])
  establishmentId Int
  user            Users          @relation(fields: [userId], references: [id])
  userId          Int
  name            String
  description     String
  amount          Decimal
  currency        String
  from            DateTime                        @db.Timestamptz()
  to              DateTime                        @db.Timestamptz()
  createdAt       DateTime      @default(now())   @db.Timestamptz()
  updatedAt       DateTime      @updatedAt        @db.Timestamptz()
}

model Incomes {
  id              Int           @id @default(autoincrement())
  Establishment   Establishments @relation(fields: [establishmentId], references: [id])
  establishmentId Int
  user            Users         @relation(fields: [userId], references: [id])
  userId          Int
  name            String
  description     String
  amount          Decimal
  currency        String
  from            DateTime                       @db.Timestamptz()
  to              DateTime                       @db.Timestamptz()
  createdAt       DateTime       @default(now()) @db.Timestamptz()
  updatedAt       DateTime       @updatedAt      @db.Timestamptz()
}

model User_Settings {
  id            Int  @id @default(autoincrement())
  user          Users @relation(fields: [userId], references: [id])
  userId        Int  @unique
  language      String
  currency      String
}

model User_Verification {
  id Int  @id @default(autoincrement())
  user Users @relation(fields: [userId], references: [id])
  userId Int @unique
  email String
  code String
  isVerified Boolean
  createdAt DateTime @default(now()) @db.Timestamptz()
  expiredAt DateTime @db.Timestamptz()
}

enum Role {
  ADMIN
  USER
  DEV
}
